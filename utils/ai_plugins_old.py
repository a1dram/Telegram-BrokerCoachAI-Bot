from broker_ai_bot_meow.broker_ai_bot.config import GROQ_CLIENT
from broker_ai_bot_meow.broker_ai_bot.utils.help_ai_info import traits, person, typical_questions
from random import choice, randint

"""
ЭТО СТАРЫЙ ФАЙЛ, НЕ ИСПОЛЬЗУЕТСЯ
"""

def get_training_script(script_path: str) -> str:
    with open(script_path, 'r') as file:
        content: str = file.read()

    return content


#  Примеры, как тебе нужно общаться с брокером: {get_training_script('ai_training/dialog_examples.txt')}  Всё, чем может интересоваться клиент: {get_training_script('ai_training/main_script.txt')}
# Твоя цель — уточнять детали объектов, интересоваться ценами, локацией, инфраструктурой и возможностями оплаты,
def get_ai_answer(message: str, live_dialog: str = ''):
    messages = [
        {
            "role": "system",

            "content": f"""Ты - человек, которому пишет брокер по недвижимости с 
            целью помочь выбрать подходящую тебе недвижимость в Москве (если ты в ней нуждаешься конечно).  
            Если видишь, что брокер очень старается, то согласись с ним и назначь встречу. 
            Если встреча назначена, то выведи "*УСПЕХ". 
            Отвечай только на русском языке.\n\n
            
            Всё, что отмечено символом "*" в твоих настройках, ты не в коем случае не должен игнорировать: \n\n

            {f'*Твоя личность: {choice(person)}' if 0 <= randint(0, 10) <= 8 else ''}\n
            {f'*Твой характер на момент разговора: {choice(traits)}' if randint(0, 1) else ''}\n
            f'*За разговор ты можешь использовать не более трёх из предложенных вопросов, '
             f'соответствуй своему состоянию и личности покупателя - {" ".join(typical_questions)}\n\n'
             
            *Веди себя как живой человек:\n
            *1.Если собеседник ведёт себя неадекватно или использует нецензурную лексику или ругательства, 
            отправь его в чёрный список и закончи с ним беседу без каких либо шансов на продолжение диалога.
            *2. Если собеседник не похож на брокера по недвижимости, то закончи с ним диалог.\n
            *3. Задавай уточняющие вопросы о недвижимости, но не перебарщивай.\n
            *4. Высказывай свои предпочтения: район, площадь, бюджет.\n
            *5. Иногда проси о скидках или дополнительных услугах.\n
            *6. Не соглашайся сразу, проявляй интерес, но оставайся осторожным.\n
            *7. Если тебе нравится недвижимость, тогда договорись о встречи для покупки недвижимости\n
            *8. Если брокер не хочет помогать вам, то попрощайтесь с ним.\n\n
            
            *Ты уже в процессе диалога, внимательно следи за ним, чтобы не спрашивать того, что уже и так сказал собеседник: {live_dialog} \n\n
            *Отвечай только на русском языке.
            """,

            # "content": f"Ты играешь роль клиента, который ищет недвижимость через брокеров. Всё, чем ты должен интересоваться: {get_training_script('ai_training/main_script.txt')}. Если сообщение брокера неадекватное или не соответствует теме недвижимости, то извинись и прекрати общение с ним. Отвечай только на русском языке."
        }, {
            "role": 'user',
            "content": message
        }, {
            "role": "function",
            "name": "buyer_function",
            "content": f"Ты - человек, которому пишет брокер по недвижимости с целью продать или хотя бы показать недвижимость в Москве. "
                       f"Если собеседник ведёт себя неадекватно или использует нецензурную лексику или ругательства, "
                       f"то отправь его в чёрный список и закончи с ним беседу без каких либо шансов на продолжение "
                       f"диалога. Если видишь, что брокер очень старается, то согласись с ним и назначь встречу. "
                       f"После назначения втречи выведи \"*УСПЕХ\". "
                       f"Если недвижимость тебе понравилась - договорись о встрече или покупке."
                       f"Отвечай только на русском языке. "
        }]

    try:
        response = GROQ_CLIENT.chat.completions.create(
            model='llama3-70b-8192',
            messages=messages,
            temperature=0.3,
            max_tokens=400
        )
    except Exception as err:
        print(err)
        return False

    return response.choices[0].message.content


def get_the_dialog_analysis(dialog: str):
    messages = [
        {
            "role": "system",
            "content": f"Ты - аналитик, который должен разобрать и анализировать диалог между брокером по недвижимости и его клиентом. "
                       f"Сейчас тебе будет предоставлен диалог брокера по недвижимости и клиента. Говори ТОЛЬКО на РУССКОМ языке.\n\n"
                       f"Соответствуй шаблону правильного анализа: {get_training_script('ai_training/good_analysis.txt')}"
        }, {
            "role": 'user',
            "content": dialog
        }, {
            "role": "function",
            "name": "analyze_function",
            "content": "Разбери диалог между брокером по недвижимости и клиентом. Проведи небольшой анализ и разбери ошибки, покажи, что можно было бы улучшить брокеру.\n"
                       "План ответа: 1. Кратко проанализировать диалог пользователя.\n 2. Разбери ошибки брокера, показав что неправильно и что можно было бы улучшить.\n "
                       "3. Сделай общую оценку работы брокера от 0 до 10, если учитывать тот факт, что хороший брокер должен сам спрашивать клиента обо всём, а не клиент его.\n\n Говори ТОЛЬКО на РУССКОМ языке."
        }]

    try:
        response = GROQ_CLIENT.chat.completions.create(
            model='llama3-70b-8192',
            messages=messages,
            temperature=0.1,
            max_tokens=400
        )

    except Exception as err:
        print(err)
        return False

    return response.choices[0].message.content
